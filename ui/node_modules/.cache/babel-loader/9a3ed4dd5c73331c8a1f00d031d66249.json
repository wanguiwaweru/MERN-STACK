{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sunshine\\\\Desktop\\\\ui\\\\isp\\\\src\\\\components\\\\vendor.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Vendor = () => {\n  _s();\n\n  const [customers, setRecords] = useState([]); // This method fetches the records from the database.\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/customer/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  } // This method will map out the records on the table\n\n\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vendor, \"3I+9BCzEABtnMUTgHHg4ve+kozk=\");\n\n_c = Vendor;\nexport default Vendor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vendor\");","map":{"version":3,"sources":["C:/Users/Sunshine/Desktop/ui/isp/src/components/vendor.js"],"names":["Vendor","customers","setRecords","useState","useEffect","getRecords","response","fetch","ok","message","statusText","window","alert","records","json","length","deleteRecord","id","method","newRecords","filter","el","_id","recordList","map","record","marginTop"],"mappings":";;;;;AAAA,MAAMA,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,EAAD,CAAxC,CADiB,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeC,UAAf,GAA4B;AACxB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAF,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAA1D;AACAC,QAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,YAAMI,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAtB;AACAZ,MAAAA,UAAU,CAACW,OAAD,CAAV;AACH;;AAEDR,IAAAA,UAAU;AAEV;AACH,GAjBQ,EAiBN,CAACQ,OAAO,CAACE,MAAT,CAjBM,CAAT,CAJa,CAuBb;;AACA,iBAAeC,YAAf,CAA4BC,EAA5B,EAAgC;AAC5B,UAAMV,KAAK,CAAE,yBAAwBU,EAAG,EAA7B,EAAgC;AACvCC,MAAAA,MAAM,EAAE;AAD+B,KAAhC,CAAX;AAIA,UAAMC,UAAU,GAAGN,OAAO,CAACO,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWL,EAAlC,CAAnB;AACAf,IAAAA,UAAU,CAACiB,UAAD,CAAV;AACH,GA/BY,CAiCb;;;AACA,WAASI,UAAT,GAAsB;AAClB,WAAOV,OAAO,CAACW,GAAR,CAAaC,MAAD,IAAY;AAC3B,0BACI,QAAC,MAAD;AACI,QAAA,MAAM,EAAEA,MADZ;AAEI,QAAA,YAAY,EAAE,MAAMT,YAAY,CAACS,MAAM,CAACH,GAAR;AAFpC,SAGSG,MAAM,CAACH,GAHhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,CAAP;AASH;;AAET,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAA9C;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBC,CA/DD;;GAAM1B,M;;KAAAA,M;AAgEN,eAAeA,MAAf","sourcesContent":["const Vendor = () => {\r\n    const [customers, setRecords] = useState([]);\r\n\r\n        // This method fetches the records from the database.\r\n        useEffect(() => {\r\n            async function getRecords() {\r\n                const response = await fetch(`http://localhost:5000/customer/`);\r\n\r\n                if (!response.ok) {\r\n                    const message = `An error occurred: ${response.statusText}`;\r\n                    window.alert(message);\r\n                    return;\r\n                }\r\n\r\n                const records = await response.json();\r\n                setRecords(records);\r\n            }\r\n\r\n            getRecords();\r\n\r\n            return;\r\n        }, [records.length]);\r\n\r\n        // This method will delete a record\r\n        async function deleteRecord(id) {\r\n            await fetch(`http://localhost:5000/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            const newRecords = records.filter((el) => el._id !== id);\r\n            setRecords(newRecords);\r\n        }\r\n\r\n        // This method will map out the records on the table\r\n        function recordList() {\r\n            return records.map((record) => {\r\n                return (\r\n                    <Record\r\n                        record={record}\r\n                        deleteRecord={() => deleteRecord(record._id)}\r\n                        key={record._id}\r\n                    />\r\n                );\r\n            });\r\n        }\r\n\r\nreturn (\r\n    <div>\r\n        <h3>Customers List</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Location</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody></tbody>\r\n        </table>\r\n    </div>\r\n);\r\n}\r\nexport default Vendor"]},"metadata":{},"sourceType":"module"}