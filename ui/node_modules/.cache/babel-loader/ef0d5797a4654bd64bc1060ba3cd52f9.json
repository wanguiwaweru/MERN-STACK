{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sunshine\\\\Desktop\\\\ui\\\\isp\\\\src\\\\components\\\\vendor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteRecord(props.record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = Record;\nexport default function RecordList() {\n  _s();\n\n  const [records, setRecords] = useState([]); // This method fetches the records from the database.\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/customers/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  } // This method will map out the records on the table\n\n\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c2 = RecordList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"sources":["C:/Users/Sunshine/Desktop/ui/isp/src/components/vendor.js"],"names":["React","useEffect","useState","Link","Record","props","record","name","position","level","_id","deleteRecord","RecordList","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Record = (props) => (\r\n    <tr>\r\n        <td>{props.record.name}</td>\r\n        <td>{props.record.position}</td>\r\n        <td>{props.record.level}</td>\r\n        <td>\r\n            <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n            <button className=\"btn btn-link\"\r\n                onClick={() => {\r\n                    props.deleteRecord(props.record._id);\r\n                }}\r\n            >\r\n                Delete\r\n            </button>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nexport default function RecordList() {\r\n    const [records, setRecords] = useState([]);\r\n\r\n    // This method fetches the records from the database.\r\n    useEffect(() => {\r\n        async function getRecords() {\r\n            const response = await fetch(`http://localhost:5000/customers/`);\r\n\r\n            if (!response.ok) {\r\n                const message = `An error occurred: ${response.statusText}`;\r\n                window.alert(message);\r\n                return;\r\n            }\r\n\r\n            const records = await response.json();\r\n            setRecords(records);\r\n        }\r\n\r\n        getRecords();\r\n\r\n        return;\r\n    }, [records.length]);\r\n\r\n    // This method will delete a record\r\n    async function deleteRecord(id) {\r\n        await fetch(`http://localhost:5000/${id}`, {\r\n            method: \"DELETE\"\r\n        });\r\n\r\n        const newRecords = records.filter((el) => el._id !== id);\r\n        setRecords(newRecords);\r\n    }\r\n\r\n    // This method will map out the records on the table\r\n    function recordList() {\r\n        return records.map((record) => {\r\n            return (\r\n                <Record\r\n                    record={record}\r\n                    deleteRecord={() => deleteRecord(record._id)}\r\n                    key={record._id}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    // This following section will display the table with the records of individuals.\r\n    return (\r\n        <div>\r\n            <h3>Customers List</h3>\r\n            <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone Number</th>\r\n                        <th>Location</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{recordList()}</tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}