{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sunshine\\\\Desktop\\\\ui\\\\isp\\\\src\\\\components\\\\vendor.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Customer = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.customer.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.customer.email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.customer.phoneNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.customer.location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      to: `/edit/${props.customer._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteCustomer(props.customer._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = Customer;\n\nconst Vendor = () => {\n  _s();\n\n  const [customers, setCustomers] = useState([]); // fetches the records from the database.\n\n  useEffect(() => {\n    async function getCustomers() {\n      const response = await fetch(`http://localhost:5000/customers/`);\n      console.log(response);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const customer = await response.json();\n      return customer;\n    }\n\n    const customers = getCustomers();\n    setCustomers(customers);\n  }, []); // This method will delete a record\n\n  async function deleteCustomer(id) {\n    await fetch(`http://localhost:5000/customers/${id}`, {\n      method: \"DELETE\"\n    });\n    const newCustomers = customers.filter(el => el._id !== id);\n    setCustomers(newCustomers);\n  } // This method will map out the records on the table\n\n\n  function customerList() {\n    return customers.map(customer => {\n      return /*#__PURE__*/_jsxDEV(Customer, {\n        customer: customer,\n        deleteCustomer: () => deleteCustomer(customer._id)\n      }, customer._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Customers List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customerList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vendor, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n\n_c2 = Vendor;\nexport default Vendor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Customer\");\n$RefreshReg$(_c2, \"Vendor\");","map":{"version":3,"sources":["C:/Users/Sunshine/Desktop/ui/isp/src/components/vendor.js"],"names":["useState","useEffect","Customer","props","customer","name","email","phoneNumber","location","_id","deleteCustomer","Vendor","customers","setCustomers","getCustomers","response","fetch","console","log","ok","message","statusText","window","alert","json","id","method","newCustomers","filter","el","customerList","map","marginTop"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nconst Customer = (props) => (\r\n    <tr>\r\n        <td>{props.customer.name}</td>\r\n        <td>{props.customer.email}</td>\r\n        <td>{props.customer.phoneNumber}</td>\r\n        <td>{props.customer.location}</td>\r\n        <td>\r\n            <button className=\"btn btn-link\" to={`/edit/${props.customer._id}`}>Edit</button> |\r\n            <button className=\"btn btn-link\" onClick={() => { props.deleteCustomer(props.customer._id); }}>\r\n                Delete\r\n            </button>\r\n        </td>\r\n    </tr>\r\n);\r\nconst Vendor = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n\r\n    // fetches the records from the database.\r\n    useEffect(() => {\r\n        async function getCustomers() {\r\n            const response = await fetch(`http://localhost:5000/customers/`);\r\n            console.log(response)\r\n            if (!response.ok) {\r\n                const message = `An error occurred: ${response.statusText}`;\r\n                window.alert(message);\r\n                return;\r\n            }\r\n            const customer = await response.json();\r\n            return customer\r\n        }\r\n        const customers = getCustomers()\r\n        setCustomers(customers);\r\n    }, []);\r\n\r\n    // This method will delete a record\r\n    async function deleteCustomer(id) {\r\n        await fetch(`http://localhost:5000/customers/${id}`, {\r\n            method: \"DELETE\"\r\n        });\r\n\r\n        const newCustomers = customers.filter((el) => el._id !== id);\r\n        setCustomers(newCustomers);\r\n    }\r\n\r\n        // This method will map out the records on the table\r\n    function customerList() {\r\n        return customers.map((customer) => {\r\n            return (\r\n                <Customer\r\n                    customer={customer}\r\n                    deleteCustomer = {() => deleteCustomer(customer._id)}\r\n                    key={customer._id}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        <h3>Customers List</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone Number</th>\r\n                    <th>Location</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{ customerList()}</tbody>\r\n        </table>\r\n    </div>\r\n);\r\n}\r\nexport default Vendor"]},"metadata":{},"sourceType":"module"}